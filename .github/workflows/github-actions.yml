name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - uses: actions/checkout@v3

      # Step 2: Install Kind
      - name: Install Kind
        run: |
          rm -rf ./kind  # Remove existing directory if it exists
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version

      # Step 3: Install Istioctl and Istio
      - name: Install Istioctl
        run: |
          curl -L https://istio.io/downloadIstioctl | sh -
          sudo mv $HOME/.istioctl/bin/istioctl /usr/local/bin/istioctl
          istioctl version
          istioctl install --set profile=demo -y

      # Step 4: Install Kubectl
      - name: Install Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      # Step 5: Run Tests
      - name: Test with Kind
        run: |
          chmod +x ./scripts/test-local.sh
          ./scripts/test-local.sh

  build-and-scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker images
      - name: Build Docker Images
        run: |
          for service in order catalog search frontend; do
            docker build -t egitangu/$service-service:latest -f app/$service/Dockerfile app/$service
          done

      # Step 4: Push Docker images
      - name: Push Docker Images
        run: |
          for service in order catalog search frontend; do
            docker push egitangu/$service-service:latest
          done

      # Step 5: Vulnerability Scan (using one example image, can be extended)
      - name: Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: egitangu/order-service:latest

  deploy:
    needs: build-and-scan
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install Kind
      - name: Install Kind
        run: |
          rm -rf ./kind  # Remove existing directory if it exists
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version

      # Step 3: Install Istioctl and Istio (if needed for deploy environment)
      - name: Install Istioctl
        run: |
          curl -L https://istio.io/downloadIstioctl | sh -
          sudo mv $HOME/.istioctl/bin/istioctl /usr/local/bin/istioctl
          istioctl version
          istioctl install --set profile=demo -y

      # Step 4: Install Kubectl (for deploy environment)
      - name: Install Kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      # Step 5: Install Helm
      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # Step 6: Deploy Third Party Services with Helm
      - name: Deploy Third Party Services with Helm
        run: |
          chmod +x ./scripts/deploy-helm.sh
          ./scripts/deploy-helm.sh

      # Step 7: Deploy Services with kubectl
      - name: Deploy Services with kubectl
        run: |
          chmod +x ./scripts/deploy-kubectl.sh
          ./scripts/deploy-kubectl.sh
