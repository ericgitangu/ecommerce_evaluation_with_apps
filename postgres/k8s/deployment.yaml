# PostgreSQL StatefulSet Configuration
# This manifest defines a StatefulSet to run PostgreSQL in Kubernetes
#
# References:
# - Official PostgreSQL Docker image: https://hub.docker.com/_/postgres
# - Kubernetes StatefulSet docs: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
# - PostgreSQL on Kubernetes best practices: https://cloud.google.com/blog/products/databases/to-run-or-not-to-run-a-database-on-kubernetes-what-to-consider
#
# The configuration uses:
# - PostgreSQL 15 Alpine-based image for smaller footprint
# - Secret references for sensitive credentials
# - Resource limits and requests for proper scheduling
# - Readiness probe to verify database availability
# - Persistent volume for data storage

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: database
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: service-secrets
                  key: postgres-password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: service-secrets
                  key: postgres-username
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: service-secrets
                  key: postgres-database
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "1Gi"
