apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-service
  namespace: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-service
  template:
    metadata:
      labels:
        app: frontend-service
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: frontend-service
          imagePullPolicy: IfNotPresent
          image: egitangu/frontend-service:latest
          ports:
            - containerPort: 5004
          readinessProbe:
            httpGet:
              path: /health
              port: 5004
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /health
              port: 5004
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            limits:
              memory: "128Mi"
              cpu: "100m"
            requests:
              memory: "64Mi"
              cpu: "50m"
          env:
            - name: RABBITMQ_HOST
              value: rabbitmq.messaging.svc.cluster.local
            - name: POSTGRES_HOST
              value: postgres-postgresql.database.svc.cluster.local
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: service-secrets
                  key: postgres-database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: service-secrets
                  key: postgres-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: service-secrets
                  key: postgres-password
          volumeMounts:
            - name: logs-and-metrics
              mountPath: /app/logs
      volumes:
        - name: logs-and-metrics
          emptyDir: {}
